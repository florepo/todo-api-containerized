name: Deploy to Amazon ECS

on:
  push:
    branches: [ main ]

env:
  ECR_REPOSITORY: "repo"     # set this to your Amazon ECR repository name
  ECS_SERVICE: "todo_api_service"                 # set this to your Amazon ECS service name
  # ECS_CLUSTER: "todo_api_cluster"                 # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: "todo_api_task_definition"   # set this to the path to your Amazon ECS task definition
  #                                                 # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: $IMAGE_TAG                        # set this to the name of the container in the
  #                                                 # containerDefinitions section of your task definition

defaults:
  run:
    shell: bash

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and tag and push image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: todoapi/production/runner
          IMAGE_TAG: test
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Download task definition from AWS
        id: download-task
        run: |
          aws ecs describe-task-definition --task-definition $ECS_TASK_DEFINITION --query taskDefinition > task-definition.json

      # - name: Rename task definition
      #   run: mv task-definition* task-definition.json

      - name: Render Amazon ECS task definition
        id: render-web-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: service
          image: test

      - name: Deploy to Amazon ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-web-container.outputs.task-definition }}
          service: $ECS_SERVICE
          cluster: default
          wait-for-service-stability: true